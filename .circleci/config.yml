version: 2
jobs:
  build:
    working_directory: ~/code/AndroidDemo
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout: 
          path: ~/code
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Check the project dir
          command: echo $PWD
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies          
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
  
      - run:
          name: Build debug APK and release APK
          command: |
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
  
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account  espresso-1@appspot.gserviceaccount.com --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Install Crmod dependency
          command: sudo pip install -U crcmod
          
      - run:
          name: Test with Firebase Test Lab
          command:  >
            sudo gcloud firebase test android run --type instrumentation \
              --app $PWD/app/build/outputs/apk/debug/app-debug.apk \
              --test $PWD/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
              --device model=Nexus5X,version=26,locale=en_US,orientation=portrait \
              --environment-variables coverage=true,coverageFile=/sdcard/tmp/code-coverage/connected/coverage.ec \
              --directories-to-pull=/sdcard/tmp --timeout 20m

      - run:
          name: Create directory to store test results
          command: mkdir firebase
          
      - run:
          name: Install gsutil dependency and get test results 
          command: gsutil -m cp -r -U "`gsutil ls gs://test-lab-v11vbsd1dt2m0-jjyihba3kj2di | tail -1`*"  /root/workspace/firebase/ ||true

      - persist_to_workspace:
          root: .
          paths:
            - firebase
            
      - store_artifacts:
          path: /root/workspace/firebase/
          destination: /firebase/
